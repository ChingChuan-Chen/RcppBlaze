// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/RcppBlaze.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// blaze_version
Rcpp::IntegerVector blaze_version(bool single);
RcppExport SEXP _RcppBlaze_blaze_version(SEXP singleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type single(singleSEXP);
    rcpp_result_gen = Rcpp::wrap(blaze_version(single));
    return rcpp_result_gen;
END_RCPP
}
// blaze_set_seed
void blaze_set_seed(unsigned int seed);
RcppExport SEXP _RcppBlaze_blaze_set_seed(SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int >::type seed(seedSEXP);
    blaze_set_seed(seed);
    return R_NilValue;
END_RCPP
}
// blaze_get_seed
void blaze_get_seed();
RcppExport SEXP _RcppBlaze_blaze_get_seed() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    blaze_get_seed();
    return R_NilValue;
END_RCPP
}
// blaze_get_threads
int blaze_get_threads();
RcppExport SEXP _RcppBlaze_blaze_get_threads() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(blaze_get_threads());
    return rcpp_result_gen;
END_RCPP
}
// blaze_set_threads
void blaze_set_threads(int n);
RcppExport SEXP _RcppBlaze_blaze_set_threads(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    blaze_set_threads(n);
    return R_NilValue;
END_RCPP
}
// fastLmPure
Rcpp::List fastLmPure(Rcpp::NumericMatrix X, Rcpp::NumericVector y, int type);
RcppExport SEXP _RcppBlaze_fastLmPure(SEXP XSEXP, SEXP ySEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(fastLmPure(X, y, type));
    return rcpp_result_gen;
END_RCPP
}
